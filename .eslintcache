[{"C:\\Projects\\Egnite Dev\\egnite-app\\src\\index.tsx":"1","C:\\Projects\\Egnite Dev\\egnite-app\\src\\serviceWorker.ts":"2","C:\\Projects\\Egnite Dev\\egnite-app\\src\\reportWebVitals.ts":"3","C:\\Projects\\Egnite Dev\\egnite-app\\src\\App.tsx":"4","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\ColorModeSwitcher.tsx":"5","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Functions\\Functions.tsx":"6","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Marketplace\\Marketplace.tsx":"7","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\Sidebar.tsx":"8","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\GitSidebar.tsx":"9","C:\\Projects\\Egnite Dev\\egnite-app\\src\\Layout.tsx":"10","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schemas.tsx":"11","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\SchemaItem.tsx":"12","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\HeadBreadcrumbs.tsx":"13","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\CreateSchema.tsx":"14","C:\\Projects\\Egnite Dev\\egnite-app\\src\\store\\schemas.ts":"15","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\UpdateSchema.tsx":"16","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\DeleteSchema.tsx":"17","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\Schema.tsx":"18","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\LoadingSkeleton.tsx":"19","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\CreateField.tsx":"20","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\DeleteField.tsx":"21","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\UpdateField.tsx":"22","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\DeleteRelation.tsx":"23","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Settings\\General.tsx":"24","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Dashboard\\Dashboard.tsx":"25","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\Login.tsx":"26","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\Logo.tsx":"27","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\LoginForm.tsx":"28","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\DividerWithText.tsx":"29","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\PasswordField.tsx":"30","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\AppLayoutRoute.tsx":"31"},{"size":937,"mtime":1612589183659,"results":"32","hashOfConfig":"33"},{"size":5258,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":416,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":434,"mtime":1612449293407,"results":"36","hashOfConfig":"33"},{"size":874,"mtime":1612420231202,"results":"37","hashOfConfig":"33"},{"size":746,"mtime":1612435024944,"results":"38","hashOfConfig":"33"},{"size":752,"mtime":1612434964621,"results":"39","hashOfConfig":"33"},{"size":3773,"mtime":1614663853991,"results":"40","hashOfConfig":"33"},{"size":1399,"mtime":1613550510380,"results":"41","hashOfConfig":"33"},{"size":1361,"mtime":1614875616816,"results":"42","hashOfConfig":"33"},{"size":1926,"mtime":1614662902611,"results":"43","hashOfConfig":"33"},{"size":2539,"mtime":1614662731852,"results":"44","hashOfConfig":"33"},{"size":1177,"mtime":1612583175483,"results":"45","hashOfConfig":"33"},{"size":4419,"mtime":1614586430820,"results":"46","hashOfConfig":"33"},{"size":122,"mtime":1612589639281,"results":"47","hashOfConfig":"33"},{"size":4271,"mtime":1613109691010,"results":"48","hashOfConfig":"33"},{"size":3452,"mtime":1613109668449,"results":"49","hashOfConfig":"33"},{"size":9620,"mtime":1614662953329,"results":"50","hashOfConfig":"33"},{"size":327,"mtime":1612622898457,"results":"51","hashOfConfig":"33"},{"size":12655,"mtime":1614587229088,"results":"52","hashOfConfig":"33"},{"size":3452,"mtime":1613113770194,"results":"53","hashOfConfig":"33"},{"size":12701,"mtime":1614059183637,"results":"54","hashOfConfig":"33"},{"size":3439,"mtime":1613113884489,"results":"55","hashOfConfig":"33"},{"size":4982,"mtime":1614677939765,"results":"56","hashOfConfig":"33"},{"size":162,"mtime":1614663729372,"results":"57","hashOfConfig":"33"},{"size":2482,"mtime":1614859450017,"results":"58","hashOfConfig":"33"},{"size":2377,"mtime":1614852835895,"results":"59","hashOfConfig":"33"},{"size":713,"mtime":1614852814129,"results":"60","hashOfConfig":"33"},{"size":527,"mtime":1614852786625,"results":"61","hashOfConfig":"33"},{"size":1930,"mtime":1614852866479,"results":"62","hashOfConfig":"33"},{"size":798,"mtime":1614875541214,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"se5rgr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Egnite Dev\\egnite-app\\src\\index.tsx",[],["130","131"],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\serviceWorker.ts",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\reportWebVitals.ts",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\App.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\ColorModeSwitcher.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Functions\\Functions.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Marketplace\\Marketplace.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\Sidebar.tsx",["132","133"],"import { Box, Link, Tooltip, useColorMode, useColorModeValue, VStack } from '@chakra-ui/react'\r\nimport React, { useEffect } from 'react'\r\nimport { ColorModeSwitcher } from './ColorModeSwitcher'\r\nimport { BiCog, BiFile, BiLogOut, BiPaperPlane, BiSearch, BiStoreAlt } from \"react-icons/bi\";\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n    const { colorMode, } = useColorMode()\r\n    const menuItemColor = useColorModeValue(\"gray.200\", \"gray.700\")\r\n    const location = useLocation<any>();\r\n    console.log(location.pathname)\r\n   \r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"space-between\" flexDirection=\"column\" width=\"70px\" height=\"100vh\" padding=\"20px 10px\" background={colorMode === \"light\" ? \"white\" : \"gray.800\"}>\r\n            <VStack spacing={3}>\r\n                <Tooltip label=\"Search\" aria-label=\"Search\" placement=\"right\" hasArrow >\r\n                    <Link as={NavLink} to={\"/\"+location.pathname.split(\"/\")[1]+\"/overview\"} activeClassName=\"active-menu\" display=\"flex\" color=\"gray.500\" background={menuItemColor} borderRadius=\"18px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                        <BiSearch size=\"25\" />\r\n                    </Link>\r\n                </Tooltip>\r\n                <Tooltip label=\"Schemas\" aria-label=\"Schemas\" placement=\"right\" hasArrow >\r\n                    <Link as={NavLink} to={\"/\"+location.pathname.split(\"/\")[1]+\"/schemas\"} activeClassName=\"active-menu\" display=\"flex\" color=\"gray.500\" background={menuItemColor} borderRadius=\"18px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                    <   BiFile size=\"25\" />\r\n                    </Link>\r\n                </Tooltip>\r\n                <Tooltip label=\"Functions\" aria-label=\"Functions\" placement=\"right\" hasArrow >\r\n                    <Link as={NavLink} to={\"/\"+location.pathname.split(\"/\")[1]+\"/functions\"} activeClassName=\"active-menu\" display=\"flex\" color=\"gray.500\" background={menuItemColor} borderRadius=\"18px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                        <BiPaperPlane size=\"25\" />\r\n                    </Link>\r\n                </Tooltip>\r\n                <Tooltip label=\"Marketplace\" aria-label=\"Marketplace\" placement=\"right\" hasArrow >\r\n                    <Link as={NavLink} to={\"/\"+location.pathname.split(\"/\")[1]+\"/marketplace\"} activeClassName=\"active-menu\" display=\"flex\" color=\"gray.500\" background={menuItemColor} borderRadius=\"18px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                        <BiStoreAlt size=\"25\" />\r\n                    </Link>\r\n                </Tooltip>\r\n                <Tooltip label=\"Settings\" aria-label=\"Settings\" placement=\"right\" hasArrow >\r\n                    <Link as={NavLink} to={\"/\"+location.pathname.split(\"/\")[1]+\"/settings\"} activeClassName=\"active-menu\" display=\"flex\" color=\"gray.500\" background={menuItemColor} borderRadius=\"18px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                        <BiCog size=\"25\" />\r\n                    </Link>\r\n                </Tooltip>\r\n            </VStack>\r\n\r\n            <VStack>\r\n                <ColorModeSwitcher />\r\n                <Tooltip label=\"Logout\" aria-label=\"Logout\" placement=\"right\" hasArrow >\r\n                    <Box display=\"flex\" cursor=\"pointer\" color=\"gray.500\" background={colorMode === \"light\" ? \"gray.200\" : \"gray.700\"} borderRadius=\"15px\" justifyContent=\"center\" alignItems=\"center\" width=\"45px\" height=\"45px\">\r\n                        <BiLogOut size=\"25\" />\r\n                    </Box>\r\n                </Tooltip>\r\n            </VStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\GitSidebar.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\Layout.tsx",["134","135","136","137","138","139"],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schemas.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\SchemaItem.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\HeadBreadcrumbs.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\CreateSchema.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\store\\schemas.ts",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\UpdateSchema.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\DeleteSchema.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\Schema.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\LoadingSkeleton.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\CreateField.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\DeleteField.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\UpdateField.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Schemas\\Schema\\DeleteRelation.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Settings\\General.tsx",["140"],"import React, { useEffect, useState } from 'react'\r\nimport { Box, Button, FormControl, FormLabel, Heading, HStack, Input, Select, Text, useColorMode, useToast, VStack } from '@chakra-ui/react'\r\nimport HeadBreadcrumbs from '../../components/HeadBreadcrumbs'\r\nimport { BiEditAlt } from 'react-icons/bi'\r\nimport axios from 'axios'\r\n\r\nconst General = () => {\r\n    const { colorMode, } = useColorMode()\r\n    const [name, setName] = useState(\"\")\r\n    const [database, setDatabase] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [databaseURI, setDatabaseURI] = useState(\"\")\r\n    const [service, setService] = useState({})\r\n    const toast = useToast()\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/services/\"+localStorage.getItem(\"ServiceID\"))\r\n            .then((res: any) => {\r\n                console.log(res)\r\n                setService(res?.data?.service);\r\n                setName(res?.data?.service.name)\r\n                setDatabase(res?.data?.service.DatabaseType)\r\n                setDatabaseURI(res?.data?.service.DatabaseURI)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [setService])\r\n\r\n    const handleRefreshService = () => {\r\n        axios.get(\"http://localhost:8080/services/\"+localStorage.getItem(\"ServiceID\"))\r\n            .then((res: any) => {\r\n                console.log(res)\r\n                setService(res?.data?.service);\r\n                setName(res?.data?.service.name)\r\n                setDatabase(res?.data?.service.DatabaseType)\r\n                setDatabaseURI(res?.data?.service.DatabaseURI)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const handleUpdateService = () => {\r\n        setLoading(true)\r\n        axios.put(\"http://localhost:8080/services/\"+localStorage.getItem(\"ServiceID\"), { name, DatabaseType: database, DatabaseURI: databaseURI})\r\n        .then((res: any) => {\r\n            setTimeout(() => {setLoading(false)},300)\r\n            \r\n            handleRefreshService()\r\n            toast({\r\n                title: \"Service Updated.\",\r\n                description: \"Yay! service successfully updated\",\r\n                position: \"bottom-right\",\r\n                status: \"success\",\r\n                duration: 9000,\r\n                isClosable: true,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            setLoading(false)\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box width=\"100%\">\r\n            <VStack padding=\"20px\">\r\n                <HeadBreadcrumbs primary=\"Settings\" primaryRoute=\"/settings\" secondary=\"General\" secondaryRoute=\"/settings\" />\r\n                <HStack justifyContent=\"space-between\" width=\"100%\">\r\n                    <Box padding=\"20px\">\r\n                        <Heading color={colorMode === \"light\" ? \"gray.700\" : \"gray.200\"} size=\"lg\">Settings</Heading>\r\n                        <Text fontSize=\"sm\" color=\"gray.500\">You can tweak and turn the knobs here</Text>\r\n                    </Box>\r\n                    <Box padding=\"20px\">\r\n                        {/* <CreateSchema /> */}\r\n                    </Box>\r\n                </HStack>\r\n                <Box borderRadius=\"8px\" background={colorMode === \"light\" ? \"white\" : \"gray.800\"} width=\"calc(100% - 40px)\" padding=\"20px\">\r\n                    <VStack  justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={6}>\r\n                    <FormControl>\r\n                        <FormLabel>Service Name:</FormLabel>\r\n                        <Input value={name} onChange={(e) => setName(e.target.value)} borderColor={colorMode === \"light\" ? \"gray.300\" : \"gray.600\"} />\r\n                    </FormControl>\r\n                    <FormControl mt={4}>\r\n                        <FormLabel>Database:</FormLabel>\r\n                        <Select placeholder=\"Select Field Type\" value={database} onChange={(e) => setDatabase(e.target.value)} borderColor={colorMode === \"light\" ? \"gray.300\" : \"gray.600\"}>\r\n                            <option value=\"postgresql\">PostgreSQL</option>\r\n                            <option value=\"mysql\">MYSQL</option>\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl mt={4}>\r\n                        <FormLabel>Database URI:</FormLabel>\r\n                        <Input value={databaseURI} onChange={(e) => setDatabaseURI(e.target.value)} borderColor={colorMode === \"light\" ? \"gray.300\" : \"gray.600\"} />\r\n                    </FormControl>\r\n                    <Button mt={4} isLoading={loading} loadingText=\"Updating Service\" onClick={handleUpdateService} colorScheme=\"blue\">\r\n                        <BiEditAlt size=\"20\" />  <Text marginLeft=\"1\">Update Service</Text>\r\n                    </Button>\r\n\r\n                    </VStack>\r\n                    \r\n                </Box>\r\n            </VStack>\r\n\r\n\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default General\r\n","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Dashboard\\Dashboard.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\Login.tsx",["141"],"import {\r\n    Box,\r\n    Button,\r\n    Heading,\r\n    Image,\r\n    SimpleGrid,\r\n    Text,\r\n    useColorModeValue as mode,\r\n    VisuallyHidden,\r\n  } from '@chakra-ui/react'\r\n  import * as React from 'react'\r\n  import { Logo } from './Logo'\r\n  import { LoginForm } from './LoginForm'\r\n  import { FaFacebook, FaGoogle, FaGithub } from 'react-icons/fa'\r\n  import { DividerWithText } from './DividerWithText'\r\n  \r\n  export const Login = () => {\r\n    return (\r\n      <Box bg={mode('gray.50', 'inherit')} minH=\"100vh\" py=\"12\" px={{ sm: '6', lg: '8' }}>\r\n        <Box maxW={{ sm: 'md' }} mx={{ sm: 'auto' }} w={{ sm: 'full' }}>\r\n          <Box mb={{ base: '10', md: '28' }}>\r\n            <Image mx=\"auto\" h=\"10\" src=\"/egnite.svg\" />\r\n          </Box>\r\n          <Heading mt=\"6\" textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\">\r\n            Sign in to your account\r\n          </Heading>\r\n          <Text mt=\"4\" align=\"center\" maxW=\"md\" fontWeight=\"medium\">\r\n            <span>Don&apos;t have an account?</span>\r\n            <Box\r\n              as=\"a\" href=\"https://dw4b516oom0.typeform.com/to/amFe8E8d\" \r\n              marginStart=\"1\"\r\n              \r\n              color={mode('blue.600', 'blue.200')}\r\n              _hover={{ color: 'blue.600' }}\r\n              display={{ base: 'block', sm: 'revert' }}\r\n            >\r\n              Apply for access\r\n            </Box>\r\n          </Text>\r\n        </Box>\r\n        <Box maxW={{ sm: 'md' }} mx={{ sm: 'auto' }} mt=\"8\" w={{ sm: 'full' }}>\r\n          <Box\r\n            bg={mode('white', 'gray.700')}\r\n            py=\"8\"\r\n            px={{ base: '4', md: '10' }}\r\n            shadow=\"base\"\r\n            rounded={{ sm: 'lg' }}\r\n          >\r\n            <LoginForm />\r\n            <DividerWithText mt=\"6\">or continue with</DividerWithText>\r\n            <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\r\n              <Button color=\"currentColor\" variant=\"outline\">\r\n                <VisuallyHidden>Login with Facebook</VisuallyHidden>\r\n                <FaFacebook />\r\n              </Button>\r\n              <Button color=\"currentColor\" variant=\"outline\">\r\n                <VisuallyHidden>Login with Google</VisuallyHidden>\r\n                <FaGoogle />\r\n              </Button>\r\n              <Button color=\"currentColor\" variant=\"outline\">\r\n                <VisuallyHidden>Login with Github</VisuallyHidden>\r\n                <FaGithub />\r\n              </Button>\r\n            </SimpleGrid>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }","C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\Logo.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\LoginForm.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\DividerWithText.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\views\\Authentication\\PasswordField.tsx",[],"C:\\Projects\\Egnite Dev\\egnite-app\\src\\components\\AppLayoutRoute.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"150","line":5,"column":19,"nodeType":"148","messageId":"149","endLine":5,"endColumn":29},{"ruleId":"146","severity":1,"message":"151","line":3,"column":3,"nodeType":"148","messageId":"149","endLine":3,"endColumn":6},{"ruleId":"146","severity":1,"message":"152","line":4,"column":3,"nodeType":"148","messageId":"149","endLine":4,"endColumn":9},{"ruleId":"146","severity":1,"message":"153","line":5,"column":3,"nodeType":"148","messageId":"149","endLine":5,"endColumn":15},{"ruleId":"146","severity":1,"message":"154","line":7,"column":25,"nodeType":"148","messageId":"149","endLine":7,"endColumn":33},{"ruleId":"146","severity":1,"message":"155","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":15},{"ruleId":"146","severity":1,"message":"156","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":18},{"ruleId":"146","severity":1,"message":"157","line":13,"column":12,"nodeType":"148","messageId":"149","endLine":13,"endColumn":19},{"ruleId":"146","severity":1,"message":"158","line":12,"column":12,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Box' is defined but never used.","'HStack' is defined but never used.","'useColorMode' is defined but never used.","'Redirect' is defined but never used.","'Sidebar' is defined but never used.","'GitSidebar' is defined but never used.","'service' is assigned a value but never used.","'Logo' is defined but never used.","no-global-assign","no-unsafe-negation"]